{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;;;;;;;;;;AAU1C,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,KAAK,CAAC;IACJ,KAAK;IACL,MAAM;IACN,OAAO,CAAC,CAAC,CAAC,EAAE;IACZ,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC;EACJ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO;EACzE,MAAM,CAAC,CAAC,CAAC,IAAI;EACb,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;IACzB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9D,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IACnE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3G,CAAC,OAAO;MACN,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACrB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC,CAAC,OAAO;EACX,CAAC,CAAC,MAAM;AACV,CAAC,CAAC,IAAI,CAAC;AACP;;;;;;;;;;;AAWA,MAAM,CAAC,OAAO,CAAC","file":"index.js","sourcesContent":["import { getFilterDimensions } from './lib'\n\n/**\n * Generate a blur filter for a window.\n * @param {ShadowOptions} options Options to generate macOS like  shadow using a blur filter.\n * @param {number} options.width The width of the window.\n * @param {number} options.height The height of the window.\n * @param {number} [options.offsetY=25] The offset from the top of the window. Default `25`.\n * @param {number} [options.stdDeviation=27.5] The standard deviation for the blur. It will spread twice this distance in each direction. Default `27.5`.\n */\nconst shadow = (options) => {\n  const {\n    width,\n    height,\n    offsetY = 25,\n    stdDeviation = 27.5,\n  } = options\n  const dims = getFilterDimensions(width, height, stdDeviation * 2, offsetY)\n  return `<defs>\n  <filter ${dims} id=\"shadow\">\n    <feOffset dx=\"0\" dy=\"${offsetY}\" in=\"SourceAlpha\" result=\"so\"/>\n    <feGaussianBlur stdDeviation=\"${stdDeviation}\" in=\"so\" result=\"sb\"/>\n    <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\"   type=\"matrix\" in=\"sb\" result=\"sm\"/>\n    <feMerge>\n      <feMergeNode in=\"sm\"/>\n      <feMergeNode in=\"SourceGraphic\"/>\n    </feMerge>\n  </filter>\n</defs>`\n}\n\n/* documentary types/index.xml */\n/**\n * @typedef {Object} ShadowOptions Options to generate macOS like  shadow using a blur filter.\n * @prop {number} width The width of the window.\n * @prop {number} height The height of the window.\n * @prop {number} [offsetY=25] The offset from the top of the window. Default `25`.\n * @prop {number} [stdDeviation=27.5] The standard deviation for the blur. It will spread twice this distance in each direction. Default `27.5`.\n */\n\nexport default shadow"]}