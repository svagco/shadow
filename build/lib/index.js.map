{"version":3,"sources":["../../src/lib/index.js"],"names":[],"mappings":"AAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EACrB,MAAM,CAAC;AACT;;;;;;;;;;AAUA,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5D,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjB,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;EAE3B,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE;EACxB,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;;EAEvC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACxB,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1C,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACnB;EACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACxB,MAAM,CAAC;AACT;;AAEA,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;AACrB","file":"lib/index.js","sourcesContent":["const ceil = n => {\n  const r = Math.ceil(n)\n  return r\n}\n\n/**\n * Get appropriate dimensions for the blur drawing area. By default, they are set to x=-10% y=-10% width=120% height=120% but in some cases the blur will be more than that, therefore need to set manually.\n * @param {number} w Width of the image to have blur.\n * @param {number} h Height of the image to have blur.\n * @param {number} b2 Double blur standard deviation (how much the blur is spreading out from the image).\n * @param {number} blurOffsetY How much blur is offset from top.\n * @see https://stackoverflow.com/questions/6555600/gaussian-blur-cutoff-at-edges\n */\nexport const getFilterDimensions = (w, h, b2, blurOffsetY) => {\n  const wf = b2 / w // Percent of blur to width\n  const hf = b2 / h // Percent of blur to height\n  const oyf = blurOffsetY / h // Percent of margin-top to height\n\n  const fx = getPercent(wf)\n  const fy = getPercent(Math.min(oyf, hf))\n\n  const fw = 100 + (fx * 2)\n  const fh = 100 + (getPercent(hf + oyf)) + fy\n\n  const attrs = [\n    `x=\"-${fx}%\"`,\n    `y=\"-${fy}%\"`,\n    `width=\"${fw}%\"`,\n    `height=\"${fh}%\"`,\n  ]\n  const s = attrs.join(' ')\n  return s\n}\n\nconst getPercent = (x) => {\n  return ceil(x * 100)\n}\n"]}